{"version":3,"sources":["data.ts","components/uploadimg.tsx","index.tsx"],"names":["Mock","mock","success","Upload","props","state","file","loading","isDrag","e","stopPropagation","preventDefault","type","this","setState","target","files","dataTransfer","test","axios","method","url","responseType","then","response","catch","error","content","Fragment","className","src","URL","createObjectURL","name","value","key","id","onChange","handleChange","accept","htmlFor","onDragOver","handleDrag","onDragLeave","onDrop","onClick","handleSubmit","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kRAEeA,EAAKC,KAAK,aAAa,OAAO,CACzCC,SAAS,I,0BC+BQC,E,YACnB,WAAYC,GAAW,IAAD,8BACpB,4CAAMA,KACDC,MAAQ,CACXC,KAAM,KACNC,QAAQ,EACRC,QAAQ,GALU,E,wEASXC,GACTA,EAAEC,kBACFD,EAAEE,iBACa,aAAXF,EAAEG,KACJC,KAAKC,SAAS,CACZN,QAAQ,IAGVK,KAAKC,SAAS,CACZN,QAAQ,M,mCAKDC,GACXA,EAAEC,kBACFD,EAAEE,iBACF,IAAIL,EAAoB,MAEpB,UAAWG,EAAEM,QAAUN,EAAEM,OAAOC,MAChCV,EAAOG,EAAEM,OAAOC,MAAM,GACf,iBAAkBP,GAAKA,EAAEQ,aAAaD,QAC7CV,EAAOG,EAAEQ,aAAaD,MAAM,IAEnB,OAATV,KAEY,2BAA4BY,KAAKZ,EAAKM,OAGpDC,KAAKC,SAAS,CACVR,KAAMA,EACNE,QAAQ,O,mCAKHC,GAAyD,IAAD,OACnEA,EAAEE,iBAEFQ,IAAM,CACJC,OAAQ,OACRC,IAAK,aACLC,aAAc,SAEfC,MACG,SAACC,GACG,EAAKV,SAAS,CACZP,QAAQ,OAIjBkB,OACG,SAACC,S,+BAIE,IA/FSpB,EAAmBC,EA+F7B,OACAoB,GAhGUrB,EAgGWO,KAAKR,MAAMC,KAhGHC,EAgGSM,KAAKR,MAAME,QA/FrDD,EAEA,kBAAC,IAAMsB,SAAP,KACE,yBAAKC,UAAU,aAAaC,IAAKC,IAAIC,gBAAgB1B,KACrD,yBAAKuB,UAAU,YACb,yBAAKA,UAAU,WAAW,gCAASvB,EAAK2B,OACxC,8BAAUJ,UAAU,WAAWK,MAAO3B,MAM1C,kBAAC,IAAMqB,SAAP,KACE,yBAAKO,IAAI,QAAQN,UAAU,SAC3B,4DACE,0BAAMA,UAAU,OAAhB,oBAiFN,OACE,oCACE,sEACA,0BAAMA,UAAU,YACd,2BAAOO,GAAG,cAAcC,SAAU,SAAC5B,GAAD,OAA4E,EAAK6B,aAAa7B,IAAIG,KAAK,OAAO2B,OAAO,YACvJ,2BACEC,QAAQ,cACRX,UAAYhB,KAAKR,MAAMG,OAAQ,QAAS,GACxCiC,WAAY,SAAChC,GAAD,OAAO,EAAKiC,WAAWjC,IACnCkC,YAAa,SAAClC,GAAD,OAAO,EAAKiC,WAAWjC,IACpCmC,OAAQ,SAACnC,GAAyC,EAAK6B,aAAa7B,KAEnEkB,GAEH,2BAAOE,UAAU,aAAajB,KAAK,SAASsB,MAAM,SAASW,QAAS,SAACpC,GAAD,OAAO,EAAKqC,aAAarC,Y,GAlFnEsC,IAAMC,WC9B1CC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.3aff01f4.chunk.js","sourcesContent":["import Mock from 'mockjs';\r\n\r\nexport default Mock.mock('/postdata1','post',{\r\n    success: true,\r\n})","import React from 'react';\r\nimport '../data';\r\nimport './uploadimg.css';\r\nimport axios from 'axios';\r\n\r\nfunction getContent(file: File | null, loading: number){\r\n  if (file) {\r\n    return (\r\n      <React.Fragment>\r\n        <img className='file-image' src={URL.createObjectURL(file)} />\r\n        <div className='response'>\r\n          <div className=\"message\">{<strong>{file.name}</strong>}</div>\r\n          <progress className=\"progress\" value={loading}></progress>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <div key='start' className='start'>\r\n        <div>Select a file or drag here*</div>\r\n          <span className=\"btn\">Select a file</span>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\ninterface UploadState {\r\n    file: File | null,\r\n    loading: number,\r\n    isDrag: boolean\r\n}\r\n\r\nexport default class Upload extends React.Component<{}, UploadState> {\r\n  constructor(props: {}){\r\n    super(props);\r\n    this.state = {\r\n      file: null,\r\n      loading:0,\r\n      isDrag: false\r\n    }\r\n  }\r\n\r\n  handleDrag(e: React.DragEvent<HTMLLabelElement>): void{\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    if (e.type === 'dragover') {\r\n      this.setState({\r\n        isDrag: true\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isDrag: false\r\n      });\r\n    }\r\n  }\r\n  \r\n  handleChange(e: (React.ChangeEvent<HTMLInputElement> | React.DragEvent<HTMLLabelElement>)& { dataTransfer: DataTransfer }): void{\r\n    e.stopPropagation();\r\n    e.preventDefault();\r\n    let file: File | null = null;\r\n\r\n    if ('files' in e.target && e.target.files) {\r\n        file = e.target.files[0];\r\n    } else if ('dataTransfer' in e && e.dataTransfer.files){\r\n        file = e.dataTransfer.files[0];\r\n    }\r\n    if (file === null) return;\r\n\r\n    const isGood = (/\\/(?=gif|jpg|png|jpeg)/gi).test(file.type);\r\n  \r\n    if (isGood) {\r\n      this.setState({\r\n          file: file,\r\n          isDrag: false\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit(e: React.MouseEvent<HTMLInputElement, MouseEvent>): void{\r\n    e.preventDefault();\r\n    //do something\r\n    axios({\r\n      method: 'post',\r\n      url: '/postdata1',\r\n      responseType: 'json',\r\n    })\r\n    .then(\r\n        (response) => {\r\n            this.setState({\r\n              loading:1\r\n            })  \r\n        }\r\n    )\r\n    .catch(\r\n        (error) => {\r\n        }\r\n    );\r\n  }\r\n  render(){\r\n    const content = getContent(this.state.file, this.state.loading);\r\n    return (\r\n      <>\r\n        <h3>React Image Preview & Upload Component</h3>\r\n        <form className='uploader'>\r\n          <input id='file-upload' onChange={(e: React.ChangeEvent<HTMLInputElement> & { dataTransfer: DataTransfer })=> this.handleChange(e)} type='file' accept='image/*'/>\r\n          <label \r\n            htmlFor='file-upload' \r\n            className={(this.state.isDrag)?'hover': ''} \r\n            onDragOver={(e) => this.handleDrag(e)}\r\n            onDragLeave={(e) => this.handleDrag(e)}\r\n            onDrop={(e: React.DragEvent<HTMLLabelElement>) =>{this.handleChange(e)}}\r\n          >\r\n            {content}\r\n          </label>\r\n          <input className='btn-submit' type='submit' value='Submit' onClick={(e) => this.handleSubmit(e)}/>\r\n        </form>\r\n      </>\r\n    );\r\n  };\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Upload from './components/uploadimg'\r\n  \r\nReactDOM.render(\r\n  <Upload />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}